
管理页面为：8161



事务、持久化、acknowledgeMode



一、事务
	1)、什么activeMQ事务？
		1、事务是在生产者producer到broker或broker到consumer过程中同一个session中发生的，保证一条或者几条消息在发送过程中的原子性。
		2、在支持事务的session中，producer发送message时在message中带有transaction ID。broker收到message后判断是否有transaction ID，如果有就把message保存在transaction store中，等待commit或者rollback的消息。
		   所以ActiveMQ的事务是针对broker而不是producer的，不管session是否commit，broker都会收到message。如果producer发送模式选择了persistent（持久化），那么message过期后会进入死亡队列。在message进入死亡队
		   列之前，ActiveMQ会删除message中的transaction ID，这样过期的message就不在事务中了，不会保存在transaction store中，会直接进入死亡队列。
		3、在消费端如果开启了事务，如果事务未提交，是可以接收到消息的，但是broker中的消息不会出队，只有消费端手动提交了事务，broker中的消息才会出队。
		   
		   

二、ActiveMQ中的多种Message
	Message
			TextMessage
					ActiveMQTextMessage（继承ActiveMQMessage）
			StreamMessage
					ActiveMQStreamMessage（继承ActiveMQMessage）
			MapMessage
					ActiveMQMapMessage（继承ActiveMQMessage）
			ObjectMessage
					ActiveMQObjectMessage（继承ActiveMQMessage）
			BytesMessage
					ActiveMQBytesMessage（继承ActiveMQMessage）
			Message
					BlobMessage	
							ActiveMQBlobMessage
					

三、持久化
	* 非持久数据保存在内存中，但是当内部不足时，activemq会把非持久消息写入临时文件中，以腾出空间。
	* 持久化数据保存在文件或者数据库中。
	* 当activemq宕机重启时，activemq会把临时文件删除，并把持久文件中的消息从文件中恢复。
	* 如果未被消费的持久化数据在宕机以后，重启activeMQ的时候，那些未被消费的消息都会到Number Of Pending Messages中。
					
					
					
			
一、Session的事务与模式。
	1、开启事务，
		如果开启使用的话，acknowledgeMode的模式只有一个SESSION_TRANSACTED。
		开启事务以后需要手动commit.
		
	2、如果不开启事务
		AUTO_ACKNOWLEDGE：自动确认
		CLIENT_ACKNOWLEDGE：客户端确认
		DUPS_OK_ACKNOWLEDGE：批量确认。
		
		
	
二、异步和同步
	1、异步发送消息，消息丢失。
		由于消息不阻塞，生产者会认为所有send的消息均被成功发送至MQ。如果服务端突然宕机，此时生产者端内存中尚未被发送至MQ的消息都会丢失。如何保证数据被
		成功写入队列中，可以在生产者发送数据时，指定回调函数，实现AsyncCallback。
		
		
		
三、数据
	


四、Topic和Queue
	Queue：特点是能够保证数据安全。
	Topic：可能造成数据丢失。