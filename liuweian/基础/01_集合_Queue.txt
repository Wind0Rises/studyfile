Queue接口:
	boolean add(E e)：向队列中插入一个元素，如果成功返回true，如果队列是一个有界队列，当队列满了以后，抛出异常。
	E element()：获取队列头元素，并【不】从队列中删除。如果队列为空，抛出异常。
	boolean offer(E e)：向队列中插入一个元素，如果成功返回true，失败返回false，如果队列是一个有界队列，当队列满了以后，返回false。
	E peek()（[pi:k]:偷看）: 获取队列头元素，并【不】从队列中删除。如果队列为空，返回null。
	E poll()（[poul]:投票）：获取队列头元素，并从队列中删除。如果队列为空，返回null。
	E remove()：获取队列头元素，并从队列中删除。如果队列为空时，抛出异常。
	
Deque接口：
	boolean add(E e)：向双端队列的队尾添加一个元素，如果成功返回true，如果队列是一个有界队列，当队列满了以后，抛出异常。等价于addLast。
	addFirst(E e)：向双端队列的队首添加一个元素，如果成功返回true，如果队列是一个有界队列，当队列满了以后，抛出异常。
	addLast(E e)：向双端队列的队尾添加一个元素，如果成功返回true，如果队列是一个有界队列，当队列满了以后，抛出异常。等价于add。
	
	contains(Object o)：判断双端队列是否有给定的值，如果给定的值为null，抛出异常；如果存在返回true，
	
	E element()：从双端队列中获取队首元素，并【不】从队列中删除。如果队列为空，抛出异常。
	E getFirst()：从双端队列中获取队首元素，并【不】从队列中删除，如果队列为空，抛出异常。
	E getLast()：从双端队列中获取队尾元素，并【不】从队列中删除，如果队列为空，抛出异常。
	
	boolean offer(E e)：向双端队列的队尾添加一个元素，如果成功返回true，如果队列是一个有界队列，当队列满了以后，返回false。
	boolean offerFirst(E e)：向双端队列的队首添加一个元素，如果成功返回true，如果队列是一个有界队列，当队列满了以后，返回false。
	boolean offerLast(E e)：向双端队列的队尾添加一个元素，如果成功返回true，如果队列是一个有界队列，当队列满了以后，返回false。
	
	E peek()：从双端队列中获取队首元素，并【不】从队列中删除。如果队列为空，返回null。
	E peekFirst()：从双端队列中获取队首元素，并【不】从队列中删除。如果队列为空，返回null。
	E peekLast()：从双端队列中获取队尾元素，并【不】从队列中删除。如果队列为空，返回null。
	
	E poll()：从双端队列中获取队首元素，并从队列中【删除】。如果队列为空，返回null。
	E pollFirst()：从双端队列中获取队首元素，并从队列中【删除】。如果队列为空，返回null。
	E pollLast()：从双端队列中获取队尾元素，并从队列中【删除】。如果队列为空，返回null。
	
	E pop()：从双端队列中获取队首元素，并从队列中【删除】，如果队列为空，抛出异常。
	void push(E e)：向双端队列的队首添加一个元素。如果队列是一个有界队列，当队列满了以后，抛出异常。
	
	E remove()：从双端队列中获取队首元素，并从队列中【删除】。如果队列是一个有界队列，如果队列为空，抛出异常。
	E removeFirst()：从双端队列中获取队首元素，并从队列中【删除】。如果队列是一个有界队列，如果队列为空，抛出异常。
	E removeLast()：从双端队列中获取队尾元素，并从队列中【删除】。如果队列是一个有界队列，如果队列为空，抛出异常。
	
	boolean remove(Object o)：从双端队列中删除指定元素第一出现的元素，如果双端队列不包含元素，则它保持不变。如果有元素并且删除了则返回true。如果指定元素
		与队列的类型不符，会抛出异常。如果元素为null，
		
		
Stack：继承Vector，是线程安全的。
	push(E item)：向栈顶添加元素。
	E pop()：删除并返回栈顶元素。
	E peek()：查看栈顶元素。
	boolean empty()：判断这个栈是否为空。
	int search(Object o)：
