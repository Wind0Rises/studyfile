<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
     		http://www.springframework.org/schema/context
     		http://www.springframework.org/schema/context/spring-context-4.1.xsd
     		http://www.springframework.org/schema/tx
		    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		    http://www.springframework.org/schema/aop
		    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

    <!-- shiro相关配置 -->
    <!-- shiro过滤器配置 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 安全管理器 -->
        <property name="securityManager" ref="securityManager" />
        <!-- 没有认证的时候去这个地址去认真 -->
        <property name="loginUrl" value="/login" />
        <!-- 验证成功跳转到首页 -->
        <property name="successUrl" value="/index"></property>
        <!-- 指定拒绝页面。如果使用注解的方式这样unauthorizedUrl就不会再起作用了 -->
        <property name="unauthorizedUrl" value="/refuse" />
        <!-- 过滤器配置。常用anon，任何人都可以访问。其检索过程是从上到下，所以/** = authc要方法最后-->
        <property name="filterChainDefinitions">
            <value>
                /WEB-INF/views/index.jsp = anon
                /views/index.jsp = anon
                /assets/** = anon
                /logout = logout

                <!-- 注解和xml不要同时使用，不然xml会覆盖注解的功能。 -->
                /** = authc
                <!-- /** = anon -->
            </value>
        </property>
    </bean>

    <!-- 安全管理器配置 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="customRealm"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"></property>
    </bean>

    <!-- realm配置 -->
    <bean id="customRealm" class="com.liu.shiro.basis.shiro.CustomRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5" />
        <property name="hashIterations" value="2" />
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="3600000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!-- <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> -->
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
</beans>